import Head from 'next/head'
import styles from '../styles/Home.module.css'
import XLSX from "xlsx";
import {useState} from "react"

interface FileObject {
  Sheets?: object
}

export default function Home() {
  const [file1, setFile1] = useState<FileObject>({});
  const [file2, setFile2] = useState<FileObject>({});
  const [loading, setLoading] = useState(false)

  const onChange1 = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files[0];
    const reader = new FileReader();
    reader.onload = (e: any) => {
      const data = new Uint8Array(e.target.result);
      const workbook = XLSX.read(data, {type: 'array'});
      setFile1(workbook);
    };
    reader.readAsArrayBuffer(file);
  };
  const onChange2 = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files[0];
    const reader = new FileReader();
    reader.onload = (e: any) => {
      const data = new Uint8Array(e.target.result);
      const workbook = XLSX.read(data, {type: 'array'});
      setFile2(workbook);
    };
    reader.readAsArrayBuffer(file);
  };

  const onSubmit = async (e: React.MouseEvent<HTMLElement>) => {
    e.preventDefault();
    if (!file1.Sheets || !file2.Sheets) return alert("Please upload two excel files.")
    setLoading(true)
    try {
      //convert Excel to JSON
      const worksheet1 = file1.Sheets["Sheet1"]
      const worksheet2 = file2.Sheets["Sheet1"]
      const data1 = XLSX.utils.sheet_to_json(worksheet1)
      const data2 = XLSX.utils.sheet_to_json(worksheet2)
  
      //JavaScript manipulation
      const newData = [...data1, ...data2]
      console.log("newData",newData)
  
      //export
      const newWorkbook =XLSX.utils.book_new()
      const newWorksheet = XLSX.utils.json_to_sheet(newData)
      XLSX.utils.book_append_sheet(newWorkbook,newWorksheet,"Sheet1")
      XLSX.writeFile(newWorkbook,"New Data File.xlsx")
    } catch (error) {
      alert(error.message)
    }
    setLoading(false)
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>CQ Excel Tool</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/excel.png" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Excel Manipulator
        </h1>
        <p className={styles.description}>
          Thank you CQ!
        </p>

        <div className={styles.grid}>
          <div className={styles.card}>
            <h2>Excel 1</h2>
            <input
              type='file'
              className={styles.browseButton}
              id='customFile'
              onChange={onChange1}
            />
          </div>

          <div className={styles.card}>
            <h2>Excel 2</h2>
            <input
              type='file'
              className={styles.browseButton}
              id='customFile'
              onChange={onChange2}
            />
          </div>

          <button className={styles.submitButton} onClick={onSubmit}>
            <h1>{loading ? "Processing..." : "Proceed"}</h1>
          </button>
        </div>
      </main>

      <footer className={styles.footer}>
      <h3>Source Code:</h3>
        <a
          href="https://github.com/chengqing97/excel-manipulator.git"
          target="_blank"
          rel="noopener noreferrer"
        >
          https://github.com/chengqing97/excel-manipulator.git
        </a>
      </footer>
    </div>
  );
}
